Отображение участников текущего пользователя (=руководителя):
class Test(webapp2.RequestHandler):
    def get(self):
        cur_user = users.get_current_user()
        cur_lead = db.Query(Leader).filter('user =', cur_user).get()
        user_members = db.Query(Member).filter('leader =', cur_lead)
        usrs = cur_user.nickname() + '  ALL::: '
        for m in user_members:
            usrs = usrs + m.nickname + ' - ' + m.leader.nickname + ' | '
        temp_values = {'test_data': usrs}
        self.response.write(JINJA_ENVIRONMENT.get_template('templates/tmmosc/tmp.html').render(temp_values))

Отлавливание ошибки и вывод ее сообщения:
try:
        pz = self.request.POST.getall('trPzNew')                        # list of triggers is PZ open
        pz_end_add = self.request.POST.getall('pzEndAddNew')            # list of dates when PZ will be closed to adding
        pz_end_change = self.request.POST.getall('pzEndChangeNew')      # list of dates when PZ will be closed to changing
        tz = self.request.POST.getall('trTzNew')                        # list of triggers is TZ open
        link_to_tmmosc = self.request.POST.getall('toTmMoscowNew')      # list of link to official site
        org_fios = self.request.POST.getall('orgFioNew')                # list of organizer's fios
        org_dols = self.request.POST.getall('orgDolNew')                # list of organizer's dols
        org_contacts = self.request.POST.getall('orgContNew')           # list of organizer's contacts
        org_info = []
        for i in range(0, len(org_fios)):
            org_info.append([org_fios[i], org_dols[i], org_contacts[i]])
except Exception as exp:
        temp_values = {'img_src':'', 'er_name':'MY ERROR', 'login_redir':users.create_login_url('/reg/newCompetition'), 'txt':exp.message}
        self.response.write(JINJA_ENVIRONMENT.get_template('templates/tmmosc/ErrorPage.html').render(temp_values))